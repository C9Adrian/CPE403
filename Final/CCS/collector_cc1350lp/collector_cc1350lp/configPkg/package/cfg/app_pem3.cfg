/*
 *  ======== package/cfg/app_pem3.cfg ========
 *  This generated configuration script runs the user's configuration script
 *  the context of a specific target and platform in order to generate
 *  all the files necessary to create an executable; e.g., linker command
 *  files, static C/C++ data structures, etc.
 */

/*
 *  ======== _applyChanges ========
 *  Changes that bring the build target to the state at the end of the build
 *  model
 */
function _applyChanges(obj, chgObj) {
    var wasSealed = false;
    if (obj.$sealed) {
        wasSealed = true;
        obj.$unseal();
    }
    for (var prop in chgObj) {
        if (typeof obj[prop] == 'object' && obj[prop] != undefined) {
            if ("$category" in obj[prop] && obj[prop].$category == "Vector") {
               obj[prop].length = chgObj[prop].length;
               for (var i = 0; i < chgObj[prop].length; i++) {
                   if (obj[prop].length < i + 1) {
                       obj[prop].length++;
                   }
                   obj[prop][i] = chgObj[prop][i];
               }
            }
            else {
        	_applyChanges(obj[prop], chgObj[prop]);
            }
	}
	else {
            obj[prop] = chgObj[prop];
	}
    }
    if (wasSealed) {
        obj.$seal();
    }
}

/*
 *  ======== _runescape ========
 *  Recursive unescape to decode serialized strings
 */
function _runescape(obj) {
    for (var i in obj) {
	if (obj[i] != null) {
	    if (typeof obj[i] == 'string') {
		obj[i] = unescape(obj[i]);
	    }
	    else if (typeof obj[i] == 'object') {
		_runescape(obj[i]);
	    }
	}
    }
}

/*
 *  ======== _getPlatCfg ========
 */
function _getPlatCfg() {
    var tmp = {};
    _runescape(tmp);
    return (tmp);
}
/*
 *  ======== _cfginit ========
 */
function _cfginit() {
    xdc.loadPackage('xdc.services.intern.cmd');
    var prog = xdc.om['xdc.cfg.Program'];

    /* initialize prog attrs from build model */
    var build = {
        profile: "release",
        cfgScript: "C%3A/Users/Adrian/workspace_v8/collector_cc1350lp/Tools/app.cfg",
        cfgHome: "configPkg",
        cfgArgs: "null",
        cfgArgsEncoded: true,
        releases: {
            0: {
                name: "configPkg",
                attrs: {
                    prefix: "",
                    label: "default"
                },
                otherFiles: {},
                excludeDirs: {}
            }
        },
        prelink: false
    };
    _runescape(build);
    build.cfgArgs = null;
    build.target = xdc.module("ti.targets.arm.elf.M3");
    var targChange = {
        platforms: [
            "ti.platforms.simCM3"
        ],
        version: "ti.targets.arm.elf.M3%7B1%2C0%2C18.1%2C3",
        extensions: {
            ".sem3e": {
                suf: ".sem3e",
                typ: "asm"
            },
            ".sem3": {
                suf: ".sem3",
                typ: "asm"
            },
            ".sv7M": {
                suf: ".sv7M",
                typ: "asm"
            }
        },
        rootDir: "C%3A/ti/ccsv8/tools/compiler/ti-cgt-arm_18.1.3.LTS",
        ccOpts: {
            prefix: "-mv7M3%20--code_state%3D16%20--float_support%3Dvfplib%20-me%20-O4%20--opt_for_speed%3D0%20--include_path%3D%22C%3A/Users/Adrian/workspace_v8/collector_cc1350lp%22%20--include_path%3D%22C%3A/Users/Adrian/workspace_v8/collector_cc1350lp/Application%22%20--include_path%3D%22C%3A/Users/Adrian/workspace_v8/collector_cc1350lp/Application/subg%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/common%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/common/boards%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/common/boards/common%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/common/boards/subg%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/common/boards/CC13X0_LAUNCHXL%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/common/boards/CC1310_CC1190%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/common/api/inc%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/common/util%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/common/inc%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/stack/src%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/examples/rtos/CC1350_LAUNCHXL/ti154stack/stack/tirtos/inc%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/heapmgr%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/hal/src/inc%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/hal/src/target/_common%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/hal/src/target/_common/cc13xx%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/icall/src/inc%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/osal/src/inc%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/services/src/aes%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/services/src/appasrt%22%20--include_path%3D%22C%3A/Users/Adrian/workspace_v8/collector_cc1350lp/Application/Services%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/services/src/nv/cc26xx%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/services/src/saddr%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/services/src/sdata%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/stack/src/icall%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/fh%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/high_level%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/inc%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/rom%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/inc/cc13xx%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/low_level/cc13xx%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/low_level/cc13xx/subg%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/ti154stack/tracer%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/devices/cc13x0%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/devices/cc13x0/inc%22%20--include_path%3D%22C%3A/ti/simplelink_cc13x0_sdk_2_30_00_20/source/ti/devices/cc13x0/driverlib%22%20--include_path%3D%22C%3A/ti/ccsv8/tools/compiler/ti-cgt-arm_18.1.3.LTS/include%22%20--preinclude%3D%22C%3A/Users/Adrian/workspace_v8/collector_cc1350lp/Application/subg/features.h%22%20--define%3DAUTO_START%20--define%3DNV_RESTORE%20--define%3DRF_MULTI_MODE%20--define%3DxPOWER_MEAS%20--define%3DMAX_DEVICE_TABLE_ENTRIES%3D50%20--define%3DBOARD_DISPLAY_USE_UART%20--define%3DxBOARD_DISPLAY_USE_LCD%20--define%3DONE_PAGE_NV%20--define%3DONE_PAGE_NV_FULL_HDR%20--define%3DDEVICE_FAMILY%3Dcc13x0%20--define%3DDeviceFamily_CC13X0%20--define%3DCC13XX_LAUNCHXL%20--define%3DTI154STACK%20--define%3DCCFG_FORCE_VDDR_HH%3D0%20--define%3DSET_CCFG_BL_CONFIG_BL_LEVEL%3D0x00%20--define%3DSET_CCFG_BL_CONFIG_BL_ENABLE%3D0xC5%20--define%3DSET_CCFG_BL_CONFIG_BL_PIN_NUMBER%3D0x0D%20--define%3DSET_CCFG_BL_CONFIG_BOOTLOADER_ENABLE%3D0xC5%20--define%3DHEAPMGR_SIZE%3D0%20--define%3DUSE_ICALL%20--define%3DSTACK_LIBRARY%20--define%3DICALL_LITE%20--define%3DRCN_APP_ASSERT%20--define%3DHAL_ASSERT_SPIN%20--define%3DICALL_HOOK_ABORT_FUNC%3DhalAssertHandler%20--define%3Dxdc_runtime_Log_DISABLE_ALL%20--define%3Dxdc_runtime_Assert_DISABLE_ALL%20--define%3DxPREAMBLE_COMPATIBILITY%20--define%3DFEATURE_ENHANCED_ACK%20--define%3DFEATURE_SYSTEM_STATS%20--define%3DxSTATIC_MAC_SECURITY_DEFAULTS%20--define%3DBoard_EXCLUDE_NVS_EXTERNAL_FLASH%20--c99%20--plain_char%3Dunsigned%20--diag_warning%3D225%20--diag_wrap%3Doff%20--display_error_number%20--gen_func_subsections%3Don%20--embedded_constants%3Don%20--unaligned_access%3Don%20--enum_type%3Dpacked%20--wchar_t%3D16%20--abi%3Deabi%20--common%3Don%20--fp_reassoc%3Doff%20--sat_reassoc%3Doff%20--asm_directory%3D%22C%3A/Users/Adrian/workspace_v8/collector_cc1350lp/collector_cc1350lp%22%20--list_directory%3D%22C%3A/Users/Adrian/workspace_v8/collector_cc1350lp/collector_cc1350lp/obj%22%20--obj_directory%3D%22C%3A/Users/Adrian/workspace_v8/collector_cc1350lp/collector_cc1350lp/obj%22%20--temp_directory%3D%22C%3A/Users/Adrian/workspace_v8/collector_cc1350lp/collector_cc1350lp%22%20%20%20-qq%20-pdsw225"
        },
        rawVersion: "18.1.3"
    };
    _runescape(targChange);
    _applyChanges(build.target, targChange);

    prog.build = build;

    prog.name = "app.xem3";
    prog.cfgBase = "package/cfg/app_pem3";

    prog.endian = prog.build.target.model.endian;
    prog.codeModel = prog.build.target.model.codeModel;

    /* use the platform package's Platform module */
    var Platform = xdc.useModule("ti.platforms.simplelink.Platform");
    var platParams = _getPlatCfg();
    var invalidParams = [];
    for (var prop in platParams) {
        if (!(prop in Platform.PARAMS)) {
            delete platParams[prop];
            invalidParams.push(prop);
        }
    }
    prog.platformName = "ti.platforms.simplelink:CC1350F128";
    prog.platform = Platform.create("CC1350F128", platParams);
    for (var i = 0; i < invalidParams.length; i++) {
        Platform.$logWarning("The parameter '" + invalidParams[i] + "' is " +
            "passed to this platform instance through Build.platformTable, " +
            "but the instance does not have a configuration parameter with " +
            "that name.", prog.platform, "CC1350F128");
    }

    /* record the executable's package name */
    prog.buildPackage = "configPkg";

    /* record build-model information required during config generation */
    prog.$$bind("$$isasm", 0);
    prog.$$bind("$$isrom", 0);
    prog.$$bind("$$gentab", [
    ]);

    /* bind prog to an appropriate execution context */
    prog.cpu = prog.platform.getExeContext(prog);

    /* import the target's run-time support pkg */
    xdc.loadPackage("ti.targets.arm.rtsarm");
}

/* function to import the cfg script's package */
function _userscript(script) {
    var home;
    var spath;
    home = xdc.loadPackage("configPkg");

    xdc.om.$$bind('$homepkg', home);

    var cfgScript = "C:/Users/Adrian/workspace_v8/collector_cc1350lp/Tools/app.cfg";
    if (!script) {
        utils.loadCapsule(cfgScript, false, spath);
    }
    else {
        /* set up the same environment that loadCapsule would */
        var $saveCsd = utils.csd;
        var $cfgFile = utils.findFile(cfgScript, spath);
        var cname = cfgScript;
        if ($cfgFile) {
            $cfgFile = java.io.File($cfgFile);
            utils.csd = $cfgFile.getParentFile().getCanonicalPath();
            cname = "" + $cfgFile.getCanonicalPath();
        }

        /* create the capsule object */
        var cap = {
            prototype:  utils.global,
            $path:      cname,
            $private:   {path: cname},
            $capsule:   undefined,      /* set to cap below */
        };

        /* 'this.$capsule' is always cap object */
        cap.$capsule = cap;

        /* save the capsule object */
        utils.$$capmap[cname] = cap;

        try {
            var cx =
                Packages.org.mozilla.javascript.Context.getCurrentContext();
            var rdr = new
                java.io.BufferedReader(new java.io.StringReader(script));
            Packages.config.Shell.evaluateLoad(cx, cap, rdr, cname, 1);
        }
        finally {
            rdr.close();
            utils.csd = $saveCsd;
        }
    }
}

function _postinit() {
    var cout = null;

    var Program = xdc.om['xdc.cfg.Program'];
    /* get the exec command for this executable */
    if (Program.execCmd == null) {
        Program.execCmd = Program.platform.getExecCmd(Program,
            xdc.om["ti.platforms.simplelink"].packageBase);
    }
    cout = "define EXEC." + Program.name + '\n\n';
    cout += Program.execCmd;
    cout += "\nendef\n\n";

    /* if SourceDir generates a makefile, we need to run it */
    _genSourceDirMak("package/cfg/app_pem3", "app.pem3");

    utils.genDep("package/cfg/app_pem3", "configPkg", utils.loadedFiles, cout, null);
}

function _genSourceDirMak(cfgBase, cfgName)
{
    var SourceDir = xdc.om['xdc.cfg.SourceDir'];

    if (SourceDir && SourceDir.$instances.length > 0) {
        /* construct rule to run SourceDir generated makefile */
        var make = "\t$(MAKE) -f "
            + SourceDir.outputDir + "/" + SourceDir.makefileName;

        /* this file is included by package.mak (if it exists) */
        var file = new java.io.File(cfgBase + ".cfg.mak");
        file["delete"]();
        var out = new java.io.BufferedWriter(new java.io.FileWriter(file));

        /* add rules to run SourceDir generated makefile */
        out.write("# invoke SourceDir generated makefile for " + cfgName
            + "\n" + cfgName + ": .libraries," + cfgName
            + "\n.libraries," + cfgName + ": " + cfgBase + ".xdl\n"
            + make + "\n\n"
            + "clean::\n" + make + " clean\n\n"
        );
        out.close();
        out = null;
    }
}
